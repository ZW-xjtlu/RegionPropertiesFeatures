decomp$vectors[,1]
decomp$vectors[,1]
decomp$vectors[,2]
decomp$vectors[,3]
PC1 <- decomp$vectors[,1]
PC2 <- decomp$vectors[,2]
plot(PC_1, PC2)
colnames(Grades)
colnames(Grades_num)
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
label=colnames(Grades_num))
ggplot(cbind(PC12_df,label=scRNA_se$cell_type),
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
scale_color_brewer(palette = "Spectral")+
labs(title = "PCA of log(RPKM+1)")
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
scale_color_brewer(palette = "Spectral")+
labs(title = "PCA of log(RPKM+1)")
gsub("[1-9].Practical","", colnames(Grades_num))
gsub(".[1-9].Practical","", colnames(Grades_num))
gsub(".[1-10].Practical","", colnames(Grades_num))
gsub(".[1-9]*.Practical","", colnames(Grades_num))
gsub(".[0-9]*.Practical","", colnames(Grades_num))
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
label=gsub(".[0-9]*.Practical","", colnames(Grades_num)))
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
scale_color_brewer(palette = "Spectral")+
labs(title = "PCA of log(RPKM+1)")
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
scale_color_brewer(palette = "Dark2")+
labs(title = "PCA of log(RPKM+1)")
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
label=colnames(Grades_num))
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
scale_color_brewer(palette = "Set1")+
labs(title = "PCA of log(RPKM+1)")
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
scale_color_brewer(palette = "Set2")+
labs(title = "PCA of log(RPKM+1)")
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
labs(title = "PCA of log(RPKM+1)")
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
labs(title = "PCA of centered grades")
library(pheatmap)
pheatmap(cor(Grades_num), display_numbers = T)
decomp <- eigen(cor(Grades_num))
plot(decomp$values/sum(decomp$values))
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
label=colnames(Grades_num))
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
labs(title = "PCA of centered grades")
library(pheatmap)
pheatmap(cor(Grades_num), display_numbers = T)
decomp <- eigen(cov(Grades_num))
plot(decomp$values/sum(decomp$values))
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
label=colnames(Grades_num))
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
labs(title = "PCA of centered grades")
ggplot(PC12_df,
aes(x=PC1,y=PC2,colour=label))+
geom_point()+
theme_classic()+
labs(title = "PCA of grades")
ggplot(PC12_df,
aes(x=label,y=PC1))+
geom_point()+
theme_classic()+
labs(title = "PCA of grades")
rownames(PC12_df) <- colnames(Grades_num)
pheatmap(PC12_df)
pheatmap(as.matrix(PC12_df))
as.matrix(PC12_df)
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
PC3=decomp$vectors[,3])
rownames(PC12_df) <- colnames(Grades_num)
pheatmap(as.matrix(PC12_df))
plot(decomp$values/sum(decomp$values))
library(pheatmap)
pheatmap(cor(Grades_num), display_numbers = T)
decomp <- eigen(cov(Grades_num))
plot(decomp$values/sum(decomp$values))
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
PC3=decomp$vectors[,3])
rownames(PC12_df) <- colnames(Grades_num)
Grades_num
colnames(Grades_num)
grepl("Lecture", colnames(Grades_num))
Grades_num[,grepl("Lecture", colnames(Grades_num))]
rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])
LP_marks <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12
LP_marks
labP_marks <- rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.12
labP_marks
labP_marks <- rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.18
LabP_marks <- Grades_num$Final
Final_marks <- Grades_num[,"Final"]*0.7
Final_marks
Final_marks+lecP_marks + labP_marks
labP_marks <- rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.18
Final_marks+lecP_marks + labP_marks
lecP_marks <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12
Final_marks+lecP_marks + labP_marks
Final_marks+lecP_marks + labP_marks < 40
sum(Final_marks+lecP_marks + labP_marks < 40)
sum(Final_marks+lecP_marks + labP_marks < 35)
sum(Final_marks+lecP_marks + labP_marks < 30)
sum(Final_marks+lecP_marks + labP_marks < 40)
sum(Final_marks+lecP_marks + labP_marks < 40)
Failure <- Final_marks+lecP_marks + labP_marks < 40
Grades$Final_marks <- Final_marks
Grades$Failure <- Failure
Grades
Grades <- Grades[,1:3]
Grades$Final_marks <- Final_marks
Grades$Failure <- Failure
Grades
lecP_marks <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12
labP_marks <- rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.18
Final_marks <- Grades_num[,"Final"]*0.7
Failure <- Final_marks+lecP_marks + labP_marks < 40
Grades <- Grades[,1:3]
Grades$Module_results <- Final_marks+lecP_marks + labP_marks
Grades$Failure <- Failure
Grades
10/0.7
Mark <- c(57, 90.5, 56, 37, 68, 52.5, 85, 74, 90, 88, 75, 45, 60, 62, 73, 88, 49, 40, 68, 38, 44.5, 39, 31, 30, 0, 0, 5, 9, 7, 22.5, 27)
ID <- c(1824399,1822573,1825059, 1824401, 1823380, 1821830, 1822554, 1823373, 1822568, 1822896, 1825028, 1825365, 1822556, 1823748, 1824400, 1822562, 1822572, 1823750, 1822569, 1823776, 1824412, 1823230, 1822114, 1823576, 1718305, 1509108, 1614368, 1825055, 1823365, 1822577, 1717533)
Grades$Final[match(ID, Grades$ID.number)] <- Mark
Grades$Final[is.na(Grades$Final)] <- 0
Grades_num <- Grades[,-1*1:4]
Grades_num <- apply(Grades_num, 2, as.numeric)
library(pheatmap)
pheatmap(cor(Grades_num), display_numbers = T)
decomp <- eigen(cov(Grades_num))
plot(decomp$values/sum(decomp$values))
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
PC3=decomp$vectors[,3])
Grades <- read.csv("./Grades.csv")
colnames(Grades) <- gsub(".Submission..Real.", "", colnames(Grades))
colnames(Grades) <- gsub("Assignment..", "", colnames(Grades))
Grades[Grades == "-"] <- 0
Grades[Grades == ""] <- 0
Mark <- c(57, 90.5, 56, 37, 68, 52.5, 85, 74, 90, 88, 75, 45, 60, 62, 73, 88, 49, 40, 68, 38, 44.5, 39, 31, 30, 0, 0, 5, 9, 7, 22.5, 27)
ID <- c(1824399,1822573,1825059, 1824401, 1823380, 1821830, 1822554, 1823373, 1822568, 1822896, 1825028, 1825365, 1822556, 1823748, 1824400, 1822562, 1822572, 1823750, 1822569, 1823776, 1824412, 1823230, 1822114, 1823576, 1718305, 1509108, 1614368, 1825055, 1823365, 1822577, 1717533)
Grades$Final[match(ID, Grades$ID.number)] <- Mark
Grades$Final[is.na(Grades$Final)] <- 0
Grades_num <- Grades[,-1*1:4]
Grades_num <- apply(Grades_num, 2, as.numeric)
library(pheatmap)
pheatmap(cor(Grades_num), display_numbers = T)
decomp <- eigen(cov(Grades_num))
plot(decomp$values/sum(decomp$values))
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
PC3=decomp$vectors[,3])
rownames(PC12_df) <- colnames(Grades_num)
pheatmap(as.matrix(PC12_df))
lecP_marks <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12
labP_marks <- rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.18
Final_marks <- Grades_num[,"Final"]*0.7
Failure <- Final_marks+lecP_marks + labP_marks < 40
Grades <- Grades[,1:3]
Grades$Module_results <- Final_marks+lecP_marks + labP_marks
Grades$Failure <- Failure
Grades
Grades <- read.csv("./Grades.csv")
colnames(Grades) <- gsub(".Submission..Real.", "", colnames(Grades))
colnames(Grades) <- gsub("Assignment..", "", colnames(Grades))
Grades[Grades == "-"] <- 0
Grades[Grades == ""] <- 0
Mark <- c(57, 90.5, 56, 37, 68, 52.5, 85, 74, 90, 88, 75, 45, 60, 62, 73, 88, 49, 40, 68, 38, 44.5, 39, 31, 30, 0, 0, 5, 9, 7, 22.5, 27)
ID <- c(1824399,1822573,1825059, 1824401, 1823380, 1821830, 1822554, 1823373, 1822568, 1822896, 1825028, 1825365, 1822556, 1823748, 1824400, 1822562, 1822572, 1823750, 1822569, 1823776, 1824412, 1823230, 1822114, 1823576, 1718305, 1509108, 1614368, 1825055, 1823365, 1822577, 1717533)
Grades$Final[match(ID, Grades$ID.number)] <- Mark
Grades$Final[is.na(Grades$Final)] <- 0
Grades_num <- Grades[,-1*1:4]
Grades_num <- apply(Grades_num, 2, as.numeric)
library(pheatmap)
pheatmap(cor(Grades_num), display_numbers = T)
decomp <- eigen(cov(Grades_num))
plot(decomp$values/sum(decomp$values))
PC12_df <- data.frame(PC1=decomp$vectors[,1],
PC2=decomp$vectors[,2],
PC3=decomp$vectors[,3])
rownames(PC12_df) <- colnames(Grades_num)
pheatmap(as.matrix(PC12_df))
lecP_marks <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12
labP_marks <- rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.18
Final_marks <- Grades_num[,"Final"]*0.7
Failure <- Final_marks+lecP_marks + labP_marks < 40
Grades <- Grades[,1:3]
Grades$Module_results <- Final_marks+lecP_marks + labP_marks
Grades$Failure <- Failure
Grades
Failure <- Final_marks + lecP_marks + labP_marks < 40
Final_marks
lecP_marks
labP_marks
X * 0.15 + Y * 0.15 == rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12 + rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.18
0.12/0.18
X <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))]) * 0.12/0.18 + rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*(0.18-0.15)/0.18
X
Expected_sum <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12 + rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])*0.18
Expected_sum
Expected_sum/0.15
Expected_sum/0.15/2
Pseudo_score <- Expected_sum/0.15/2
Pseudo_score
X * 0.15 + Y * 0.15 == Expected_sum
X = Pseudo_score
Y = Pseudo_score
X * 0.15 + Y * 0.15 == Expected_sum
Expected_sum
X * 0.15 + Y * 0.15
X
Y
trim_X <- round(X,1)
trim_X
trim_X <- round(X)
resid_X <- Y
trim_X
rnorm_X <- trim_X
trim_X <- round(X+rnorm(33))
trim_X
rnorm(33)
rnorm(33,sd = 3)
rnorm(33,sd = 5)
trim_X <- round(X+rnorm(33, sd=5))
trim_X
set.seed(123)
trim_X <- round(X+rnorm(33))
trim_X
set.seed(234)
trim_X <- pmax(0, round(X+rnorm(33)))
resid_X <- X-trim_X
resid_X
Y <- resid_X + Y
X = Pseudo_score
Y = Pseudo_score
X * 0.15 + Y * 0.15 == Expected_sum
set.seed(234)
trim_X <- pmax(0, round(X+rnorm(33)))
resid_X <- X-trim_X
trim_Y <- resid_X + Y
trim_Y
trim_X
resid_X
set.seed(234)
trim_X <- pmax(0, round(X+rnorm(33)))
resid_X <- X-trim_X
trim_Y <- pmax(0, resid_X + Y)
trim_X
trim_Y
trim_Y <- round(pmax(0, resid_X + Y))
trim_Y
trim_X
rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])*0.12
MeanLecP <- rowMeans(Grades_num[,grepl("Lecture", colnames(Grades_num))])
MeanLabP <- rowMeans(Grades_num[,grepl("Lab", colnames(Grades_num))])
MeanLecP
MeanLabP
CW1 <- MeanLecP * 0.12 + MeanLabP * 0.03
CW2 <- MeanLabP * 0.15
CW1
CW2
CW1*(1/0.15)
CW1_onface <- CW1*(1/0.15)
CW2_onface <- CW2*(1/0.15)
CW2_onface
CW1_onface
CW1_onface * 0.15 + CW2_onface * 0.15 == MeanLecP * 0.12 + MeanLabP * 0.18
mean((CW1_onface * 0.15 + CW2_onface * 0.15) - (MeanLecP * 0.12 + MeanLabP * 0.18))
mean((CW1_onface * 0.15 + CW2_onface * 0.15) - (MeanLecP * 0.12 + MeanLabP * 0.18)) #Checj consistency
Grades <- Grades[,1:3]
Grades$CW1 <- CW1_onface
Grades$CW2 <- CW2_onface
Grades$Final <- Grades_num[,"Final"]
Grades$Module_results <- CW1_onface * 0.15 + CW2_onface * 0.15 + Final_marks
Grades$Failure <- Grades$Module_results < 40
Grades
data.frame(ID = Grades$ID.number, Final = Grades$Final)
data.frame(ID = Grades$ID.number, Final = Grades$Final)[order(Grades$ID.number, decreasing = TRUE),]
data.frame(ID = Grades$ID.number, Final = Grades$Final)[order(Grades$ID.number, decreasing = FALSE),]
data.frame(CW1 = Grades$CW1, CW2 = Grades$CW2, Final = Grades$Final)[order(Grades$ID.number, decreasing = FALSE),]
data.frame(CW1 = ceiling(Grades$CW1,2), CW2 = ceiling(Grades$CW2,2), Final = Grades$Final)[order(Grades$ID.number, decreasing = FALSE),]
?round
data.frame(CW1 = ceiling(Grades$CW1*100)/100, CW2 = ceiling(Grades$CW2*100)/100, Final = Grades$Final)[order(Grades$ID.number, decreasing = FALSE),]
data.frame(CW1 = ceiling(Grades$CW1*100)/100, CW2 = ceiling(Grades$CW2*100)/100)[order(Grades$ID.number, decreasing = FALSE),]
pbinom(10,10,prob = 0.9)
pbinom(10-1,10,prob = 0.9)
pbinom(10-1,10,prob = 0.9,lower.tail = FFALSE)
pbinom(10-1,10,prob = 0.9,lower.tail = FALSE)
pbinom(2-1,10,prob = 0.9,lower.tail = FALSE)
pbinom(100-1,100,prob = 0.9,lower.tail = FALSE)
pbinom(5-1,5,prob = 0.9,lower.tail = FALSE)
8/33
3/17
Grades <- read.csv("./Grades.csv")
colnames(Grades) <- gsub(".Submission..Real.", "", colnames(Grades))
colnames(Grades) <- gsub("Assignment..", "", colnames(Grades))
Grades[Grades == "-"] <- 0
Grades[Grades == ""] <- 0
Mark <- c(57, 90.5, 56, 37, 68, 52.5, 85, 74, 90, 88, 75, 45, 60, 62, 73, 88, 49, 40, 68, 38, 44.5, 39, 31, 30, 0, 0, 5, 9, 7, 22.5, 27)
ID <- c(1824399,1822573,1825059, 1824401, 1823380, 1821830, 1822554, 1823373, 1822568, 1822896, 1825028, 1825365, 1822556, 1823748, 1824400, 1822562, 1822572, 1823750, 1822569, 1823776, 1824412, 1823230, 1822114, 1823576, 1718305, 1509108, 1614368, 1825055, 1823365, 1822577, 1717533)
Grades$Final[match(ID, Grades$ID.number)] <- Mark
Grades$Final[is.na(Grades$Final)] <- 0
Grades_num <- Grades[,-1*1:4]
Grades_num <- apply(Grades_num, 2, as.numeric)
cor(Grades_num)
cor(Grades_num)[18,]
cor(Grades_num)[18,-18]
Cors <- cor(Grades_num)[18,-18]
plot(Cors)
plot_df <- data.frame(Cor = Cors, label = names(Cors))
ggplot(plot_df, aes(x=label, y=Cors, color = label))
ggplot(plot_df, aes(x=label, y=Cors, color = label))+geom_point()
ggplot(plot_df, aes(x=label, y=Cors, color = label))+geom_point()+geom_smooth(method="lm")
plot_df <- data.frame(Cor = Cors, date =1:17, label = names(Cors))
plot_df$label <- factor(plot_df$label, levels = plot_df$label)
ggplot(plot_df, aes(x=date, y=Cor, color = label))+geom_point()+geom_smooth(method="lm")
ggplot(plot_df, aes(x=as.numeric(date), y=Cor, color = label))+geom_point()+geom_smooth(method="lm")
?geom_smooth
ggplot(plot_df, aes(x=as.numeric(date), y=Cor, color = label))+geom_point()+geom_smooth(method="lm") + theme_bw()
ggplot(plot_df, aes(x=as.numeric(date), y=Cor, color = label))+geom_point()+geom_smooth() + theme_bw()
ggplot(plot_df, aes(x=date, y=Cor))+geom_point(aes(color = label))+geom_smooth(method = "lm") + theme_bw()
summary(glm(Cor~date, data = plot_df))
ggplot(plot_df, aes(x=date, y=Cor))+geom_point(aes(color = label))+geom_smooth(method = "lm") + theme_bw()
summary(glm(Cor[-17]~date, data = plot_df))
summary(glm(Cor~date, data = data.frame(Cor = Cors[-17], date =1:16)))
0.7*0.17*0.51
RPF:::sampleSequence
?mapFromTranscripts
Grades <- read.csv("./Grades.csv")
colnames(Grades) <- gsub(".Submission..Real.", "", colnames(Grades))
colnames(Grades) <- gsub("Assignment..", "", colnames(Grades))
Grades[Grades == "-"] <- 0
Grades[Grades == ""] <- 0
Mark <- c(57, 90.5, 56, 37, 68, 52.5, 85, 74, 90, 88, 75, 45, 60, 62, 73, 88, 49, 40, 68, 38, 44.5, 39, 31, 30, 0, 0, 5, 9, 7, 22.5, 27)
ID <- c(1824399,1822573,1825059, 1824401, 1823380, 1821830, 1822554, 1823373, 1822568, 1822896, 1825028, 1825365, 1822556, 1823748, 1824400, 1822562, 1822572, 1823750, 1822569, 1823776, 1824412, 1823230, 1822114, 1823576, 1718305, 1509108, 1614368, 1825055, 1823365, 1822577, 1717533)
Mark[which(ID == 1822562)] <- 90
Mark[which(ID == 1822569)] <- 66
Mark[which(ID == 1824399)] <- 52
Mark[which(ID == 1823750)] <- 39
Mark[which(ID == 1717533)] <- 25
Grades$Final[match(ID, Grades$ID.number)] <- Mark
Grades$Final[is.na(Grades$Final)] <- 0
Grades_num <- Grades[,-1*1:4]
Grades_num <- apply(Grades_num, 2, as.numeric)
Grades_num
model.fit <- lm(log(Final)~., data = Grades_num)
model.fit <- lm(log(Final)~., data = as.data.frame(Grades_num))
Grades_num$Final
as.data.frame(Grades_num)
as.data.frame(Grades_num)$Final
model.fit <- lm(log(Final+1)~., data = as.data.frame(Grades_num))
summary(model.fit)
model.fit$residuals
plot(model.fit$residuals)
model.fit <- lm(Final~., data = as.data.frame(Grades_num))
summary(model.fit)
plot(model.fit$residuals)
plot(model.fit$residuals)
plot(model.fit)
plot(model.fit$residuals)
plot(model.fit)
Grades[31,]
Grades[31,]
Grades[10,]
Grades[9,]
Grades[29,]
plot(model.fit$residuals)
Grades[model.fit$residuals < 10,]
Grades
Grades[model.fit$residuals < - 10,]
summary(model.fit)
plot(model.fit$residuals)
library(tensorflow)
library(keras)
?keras::layer_attention()
?SeqSelfAttention
???SeqSelfAttention
??SeqSelfAttention
??SelfAttention
??Attention
22/7
?exomePeak2::exomePeak2
#Specify File Directories
GENE_ANNO_GTF = system.file("extdata", "example.gtf", package="exomePeak2")
f1 = system.file("extdata", "IP1.bam", package="exomePeak2")
f2 = system.file("extdata", "IP2.bam", package="exomePeak2")
f3 = system.file("extdata", "IP3.bam", package="exomePeak2")
f4 = system.file("extdata", "IP4.bam", package="exomePeak2")
IP_BAM = c(f1,f2,f3,f4)
f1 = system.file("extdata", "Input1.bam", package="exomePeak2")
f2 = system.file("extdata", "Input2.bam", package="exomePeak2")
f3 = system.file("extdata", "Input3.bam", package="exomePeak2")
INPUT_BAM = c(f1,f2,f3)
# Peak Calling
sep <- exomePeak2(bam_ip = IP_BAM,
bam_input = INPUT_BAM,
gff_dir = GENE_ANNO_GTF,
genome = "hg19",
paired_end = FALSE)
sep
library(exomePeak2)
#Specify File Directories
GENE_ANNO_GTF = system.file("extdata", "example.gtf", package="exomePeak2")
f1 = system.file("extdata", "IP1.bam", package="exomePeak2")
f2 = system.file("extdata", "IP2.bam", package="exomePeak2")
f3 = system.file("extdata", "IP3.bam", package="exomePeak2")
f4 = system.file("extdata", "IP4.bam", package="exomePeak2")
IP_BAM = c(f1,f2,f3,f4)
f1 = system.file("extdata", "Input1.bam", package="exomePeak2")
f2 = system.file("extdata", "Input2.bam", package="exomePeak2")
f3 = system.file("extdata", "Input3.bam", package="exomePeak2")
INPUT_BAM = c(f1,f2,f3)
# Peak Calling
sep <- exomePeak2(bam_ip = IP_BAM,
bam_input = INPUT_BAM,
gff_dir = GENE_ANNO_GTF,
genome = "hg19",
paired_end = FALSE)
sep
undebug("glm_inference")
undebug(glm_inference)
undebug(GLM_inference)
#Specify File Directories
GENE_ANNO_GTF = system.file("extdata", "example.gtf", package="exomePeak2")
f1 = system.file("extdata", "IP1.bam", package="exomePeak2")
f2 = system.file("extdata", "IP2.bam", package="exomePeak2")
f3 = system.file("extdata", "IP3.bam", package="exomePeak2")
f4 = system.file("extdata", "IP4.bam", package="exomePeak2")
IP_BAM = c(f1,f2,f3,f4)
f1 = system.file("extdata", "Input1.bam", package="exomePeak2")
f2 = system.file("extdata", "Input2.bam", package="exomePeak2")
f3 = system.file("extdata", "Input3.bam", package="exomePeak2")
INPUT_BAM = c(f1,f2,f3)
# Peak Calling
sep <- exomePeak2(bam_ip = IP_BAM,
bam_input = INPUT_BAM,
gff_dir = GENE_ANNO_GTF,
genome = "hg19",
paired_end = FALSE)
sep
undebug(GLM_inference)
undebug(GLM_inference)
undebug(GLM_inference)
undebug(GLM_inference)
undebug(GLM_inference)
undebug(GLM_inference)
undebug(GLM_inference)
library(exomePeak2)
undebug(GLM_inference)
undebug(exomePeak2::GLM_inference)
undebug(exomePeak2:::GLM_inference)
rm()
rm(GLM_inference)
#Specify File Directories
GENE_ANNO_GTF = system.file("extdata", "example.gtf", package="exomePeak2")
f1 = system.file("extdata", "IP1.bam", package="exomePeak2")
f2 = system.file("extdata", "IP2.bam", package="exomePeak2")
f3 = system.file("extdata", "IP3.bam", package="exomePeak2")
f4 = system.file("extdata", "IP4.bam", package="exomePeak2")
IP_BAM = c(f1,f2,f3,f4)
f1 = system.file("extdata", "Input1.bam", package="exomePeak2")
f2 = system.file("extdata", "Input2.bam", package="exomePeak2")
f3 = system.file("extdata", "Input3.bam", package="exomePeak2")
INPUT_BAM = c(f1,f2,f3)
# Peak Calling
sep <- exomePeak2(bam_ip = IP_BAM,
bam_input = INPUT_BAM,
gff_dir = GENE_ANNO_GTF,
genome = "hg19",
paired_end = FALSE)
sep
